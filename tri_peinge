public class TriBulle {

    // Méthode pour trier un tableau avec l'algorithme de tri à bulle
    static void triBulle(int[] tableau) {
        int n = tableau.length;
        for (int i = 0; i < n-1; i++) {
            for (int j = 0; j < n-i-1; j++) {
                if (tableau[j] > tableau[j+1]) {
                    // Échange les éléments si l'élément courant est plus grand que le suivant
                    int temp = tableau[j];
                    tableau[j] = tableau[j+1];
                    tableau[j+1] = temp;
                }
            }
        }
    }

    // Méthode pour afficher un tableau
    static void afficherTableau(int[] tableau) {
        int n = tableau.length;
        for (int i = 0; i < n; i++) {
            System.out.print(tableau[i] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        int[] tableau = {64, 34, 25, 12, 22, 11, 90};
        System.out.println("Tableau avant le tri :");
        afficherTableau(tableau);

        triBulle(tableau);

        System.out.println("Tableau après le tri :");
        afficherTableau(tableau);
    }
}
public class CombSort {

    // Fonction pour effectuer le tri à peigne
    public static void combSort(int[] array) {
        int gap = array.length;
        boolean swapped = true;

        while (gap > 1 || swapped) {
            // Mettre à jour le gap
            gap = getNextGap(gap);

            swapped = false;

            // Comparer tous les éléments avec le gap actuel
            for (int i = 0; i < array.length - gap; i++) {
                if (array[i] > array[i + gap]) {
                    // Échanger les éléments
                    int temp = array[i];
                    array[i] = array[i + gap];
                    array[i + gap] = temp;
                    swapped = true;
                }
            }
        }
    }

    // Fonction pour obtenir le gap suivant
    private static int getNextGap(int gap) {
        // Le facteur de réduction
        final double shrink = 1.3;
        // Calculer le nouveau gap
        gap = (int) (gap / shrink);
        return Math.max(1, gap);
    }

    // Fonction pour afficher un tableau
    public static void printArray(int[] array) {
        for (int value : array) {
            System.out.print(value + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        int[] array = {8, 4, 1, 6, 9, 2, 5, 7, 3};
        System.out.println("Tableau non trié :");
        printArray(array);

        combSort(array);

        System.out.println("Tableau trié :");
        printArray(array);
    }
}
